 ------
 Task Reference
 ------
 Brett Porter
 Herve Boutemy
 ------
 2008-07-17
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Task Reference

  ~~ TODO: Can the task and type classes be generated using Modello?
  ~~ If so, the reference documentation can be generated from the model.

* <<<dependencies>>>

  This task will check if any of the specified dependencies, and their dependencies are missing or updated, and
  download them if necessary. The dependencies will be made available as a fileset or path reference.

  The dependencies task accepts the following attributes:

*-------------------------+--------------------------------------------------------+
| <<<filesetId>>>         | The reference ID to store a fileset under, for the resolved dependencies.
*-------------------------+--------------------------------------------------------+
| <<<javadocFilesetId>>>  | The reference ID to store a fileset under, for the javadoc attachements of the resolved dependencies. <(since 2.0.9)>
*-------------------------+--------------------------------------------------------+
| <<<pathId>>>            | The reference ID to store a path under, for the resolved dependencies.
*-------------------------+--------------------------------------------------------+
| <<<pomRefId>>>          | The reference ID from a POM datatype defined earlier in the build file.
*-------------------------+--------------------------------------------------------+
| <<<sourcesFilesetId>>>  | The reference ID to store a fileset under, for the sources attachements of the resolved dependencies. <(since 2.0.6)>
*-------------------------+--------------------------------------------------------+
| <<<type>>>              | The type of artifacts to be retrieved. The default is <<<jar>>>.
*-------------------------+--------------------------------------------------------+
| <<<useScope>>>          | The scope to be retrieved.
*-------------------------+--------------------------------------------------------+
| <<<verbose>>>           | If <<<true>>> this displays the results of each dependency resolution and their relationships. Default is <false>.
*-------------------------+--------------------------------------------------------+
| <<<versionsId>>>        | The property ID to store the versions of the resolved dependencies, for use by a <<<VersionMapper>>>. <(since 2.0.7)>
*-------------------------+--------------------------------------------------------+

  The task can include the <<<dependency>>> nested type, in addition to the other shared types
  <<<localRepository>>>, <<<pom>>> and <<<remoteRepository>>>, which will be explained later.

  You must include either:
       a single <<<pom>>> element
       or a <<<pomRefId>>> attribute
       or one or more <<<dependency>>> elements.

  If you have set a value for <<<versionsId>>>, you can later use <<<VersionMapper>>>, for example during a copy:

-----
<copy todir="...">
  <fileset refid="..." />
  <mapper classpathref="maven-ant-tasks.classpath"
          classname="org.apache.maven.artifact.ant.VersionMapper"
          from="${...versionId property...}" to="flatten" />
</copy>
-----

  <(since 2.0.8)> For each dependency resolved, the property <<<groupId:artifactId:type[:classifier]>>> is defined pointing to
  the corresponding file.

** <<<dependency>>>

  ~~ TODO: Is system scope supported, in the table below?

*------------------+--------------------------------------------------------+
| <<<groupId>>>    | The group ID of the dependency. <Required>
*------------------+--------------------------------------------------------+
| <<<artifactId>>> | The artifact ID of the dependency. <Required>
*------------------+--------------------------------------------------------+
| <<<version>>>    | The version of the dependency. <Required>
*------------------+--------------------------------------------------------+
| <<<type>>>       | The type of the dependency. The default is <<<jar>>>.
*------------------+--------------------------------------------------------+
| <<<scope>>>      | The scope of the usage of the dependency, which affects which of that dependency's own dependencies are also retrieved. This can be <<<compile>>>, <<<runtime>>>, <<<test>>>, <<<provided>>>.
*------------------+--------------------------------------------------------+

  The dependency can also nest multiple <<<exclusion>>> elements.

*** <<<exclusion>>>

  An exclusion can be used to prevent the resolution of a particular artifact in the tree of the <<<dependency>>>.

*------------------+--------------------------------------------------------+
| <<<groupId>>>    | The group ID of the dependency to exclude. <Required>
*------------------+--------------------------------------------------------+
| <<<artifactId>>> | The artifact ID of the dependency to exclude. <Required>
*------------------+--------------------------------------------------------+

* <<<install>>>, <<<deploy>>>

  These tasks will install/deploy the given file into the local/remote repository. It is stored using the information in the supplied
  POM. Multiple artifacts can be attached during install/deploy using <<<attach>>> elements.

*---------------------+--------------------------------------------------------------------------+-------------------------------------------------+
| Attribute           | Description                                                              | Required                                        |
*---------------------+--------------------------------------------------------------------------+-------------------------------------------------+
| <<<file>>>          | The file to install in the repository.                                   | Yes, except if packaging is <<<pom>>>           |
*---------------------+--------------------------------------------------------------------------+-------------------------------------------------+
| <<<pomRefId>>>      | The reference ID from a POM datatype defined earlier in the build file.  | No, if a <<<pom>>> nested element is provided instead |
*---------------------+--------------------------------------------------------------------------+-------------------------------------------------+
| <<<uniqueVersion>>> | (<<<deploy>>> only) Whether to assign snapshots a unique version comprised of the timestamp and build number, or to use the same version each time | No, the default is <<<true>>>. |
*---------------------+--------------------------------------------------------------------------+-------------------------------------------------+

  The task must take either a nested <<<pom>>> element, or a <<<pomRefId>>> attribute.
  The task can have an optional <<<localRepository>>> nested element.

  <<<deploy>>> can have an optional <<<remoteRepository>>> nested element. If no
  <<<remoteRepository>>> nested element is given, the <<<distributionManagement>>> section of the POM is used.

** <<<attach>>> <(since 2.0.6)>

  Multiple artifacts can be attached to the main artifact, for exemple: sources, javadocs, ...

*------------------+--------------------------------------------------------+
| <<<file>>>       | The file to attach. <Required>
*------------------+--------------------------------------------------------+
| <<<type>>>       | The type of the file. Defaults to <<<jar>>>.
*------------------+--------------------------------------------------------+
| <<<classifier>>> | The classifier of the file.
*------------------+--------------------------------------------------------+

* <<<install-provider>>>

  This task will install a Wagon provider, to add support for more protocols.

*------------------+--------------------------------------------------------------------------+
| Attribute        | Description
*------------------+--------------------------------------------------------------------------+
| <<<artifactId>>> | The artifact ID of the provider to install. <Required>
*------------------+--------------------------------------------------------------------------+
| <<<groupId>>>    | The group ID of the provider to install. The default is <<<org.apache.maven.wagon>>>. <(since 2.0.7)>
*------------------+--------------------------------------------------------------------------+
| <<<version>>>    | The version of the provider to install. <Required>
*------------------+--------------------------------------------------------------------------+

Type Reference

* <<<localRepository>>>

  Specifies the location of the local repository of artifacts.

*------------------+--------------------------------------------------------+
| <<<layout>>>     | The layout of the local repository. The valid options are <<<legacy>>> (Maven 1), or <<<default>>> (Maven 2). Defaults to <<<default>>>.
*------------------+--------------------------------------------------------+
| <<<path>>>       | The directory of the local repository. <Required>
*------------------+--------------------------------------------------------+

  <<Note>>: until 2.0.6, attribute <<<path>>> was named <<<location>>>, but this has changed in 2.0.7 to solve a conflict with Ant 1.7.

* <<<remoteRepository>>>

  Specifies the location of the remote repository.

*----------------------+--------------------------------------------------------+
| <<<layout>>>         | The layout of the remote repository. The valid options are <<<legacy>>> (Maven 1), or <<<default>>> (Maven 2). Defaults to <<<default>>>.
*----------------------+--------------------------------------------------------+
| <<<releases>>>       | Policies regarding downloading released artifacts.
*----------------------+--------------------------------------------------------+
| <<<snapshots>>>      | Policies regarding downloading snapshot artifacts.
*----------------------+--------------------------------------------------------+
| <<<url>>>            | The URL of the repository. <Required>
*----------------------+--------------------------------------------------------+

  The <<<remoteRepository>>> can have the following nested elements: <<<authentication>>> and <<<proxy>>>.

** <<<releases>>>, <<<snapshots>>>

  Policies about downloading different types of artifacts.

*----------------------+--------------------------------------------------------+
| <<<checksumPolicy>>> | How to treat missing or incorrect checksums for the dependencies that are downloaded. Valid values are <<<warn>>> (<default>) and <<<fail>>>.
*----------------------+--------------------------------------------------------+
| <<<enabled>>>        | Whether to download this type of artifact from the repository. Default is <<<true>>>.
*----------------------+--------------------------------------------------------+
| <<<updatePolicy>>>   | How often to check for updates on dependencies that are snapshots or include a range of versions. Valid values are <<<never>>>, <<<interval:MINUTES>>>, <<<daily>>> (<default)>, <<<always>>>.
*----------------------+--------------------------------------------------------+

** <<<authentication>>>

  The authentication element is used for passing a username, password and other credentials to the repository either
  on upload or download. The content is the same as for <<<server>>> in the {{{http://maven.apache.org/maven-settings/settings.html#class_server} settings reference}}.

** <<<proxy>>>

  The proxy element is typically used for HTTP repositories. The content is the same as for <<<proxy>>> in the
  {{{http://maven.apache.org/maven-settings/settings.html#class_proxy} settings reference}}.

* <<<{pom}>>>

  The POM element will load a POM file and make it available as a reference for the other tasks or as properties.

*------------------+--------------------------------------------------------+
| <<<file>>>       | The file of the POM to load. <Required>
*------------------+--------------------------------------------------------+
| <<<id>>>         | The reference ID of this POM.
*------------------+--------------------------------------------------------+

  ~~ TODO: Add reference documentation for VersionMapper
